{"version":3,"sources":["reportWebVitals.ts","components/ColorPanel/ColorPanel.tsx","firebase.ts","components/Messages/FileModal.tsx","components/Messages/ProgressBar.tsx","components/Messages/MessageForm.tsx","components/Messages/MessagesHeader.tsx","components/Messages/Message.tsx","components/Messages/Messages.tsx","components/MetaPanel/MetaPanel.tsx","redux/constants/actionTypes.ts","components/SidePanel/Channels.tsx","redux/actions/action.ts","components/SidePanel/UserPanel.tsx","components/SidePanel/SidePanel.tsx","components/App.tsx","components/Auth/Login.tsx","components/Auth/Register.tsx","components/Spinner/index.tsx","router/router.tsx","redux/reducers/reducer.ts","redux/store.ts","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ColorPanel","Sidebar","as","Menu","icon","inverted","vertical","visible","width","Divider","Button","size","color","process","firebaseConfig","apiKey","REACT_APP_APIKEY","authDomain","REACT_APP_AUTH_DOMAIN","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKATE","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_APP_ID","databaseURL","REACT_APP_REALTIME_DB","console","log","firebase","initializeApp","database","FileModal","props","open","closeModal","uploadFile","useState","file","setFile","authorized","clearFile","isAuthorized","filename","name","mime","lookup","includes","Modal","onClose","Header","Content","Input","fluid","onChange","event","target","files","label","type","Actions","onClick","content","labelPosition","metadata","contentType","positive","ProgressBar","percentUploaded","className","Progress","percent","indicating","progress","success","MessageForm","messageRef","message","setMessage","setOpen","loading","setLoading","errors","setErrors","uploadstate","setUploadstate","uploadTask","setUploadTask","storage","ref","storageRef","percentage","setPercentage","currentUser","useSelector","state","user","currentChannel","channel","formattedMessage","fileUrl","messageData","timestamp","ServerValue","TIMESTAMP","id","uid","displayName","avatar","photoURL","useEffect","on","snap","Math","round","bytesTransferred","totalBytes","error","snapshot","getDownloadURL","downloadurl","sendFileMessage","catch","off","downloadUrl","child","push","set","Segment","floated","style","marginBottom","disabled","value","some","err","e","placeholder","filePath","uuidv4","put","MessagesHeader","channelName","users","clearing","Icon","Subheader","Message","key","timeStamp","Comment","Avatar","src","isOwner","Author","Metadata","moment","fromNow","hasOwnProperty","isImage","Image","image","Text","Messages","messages","setMessages","uniqueUser","setUniqueUser","addListener","channelId","loadedMessages","val","countUniqueUser","uniqueUsers","reduce","acc","length","Group","map","displayMessages","MetaPanel","SET_USER","CLEAR_USER","SET_CURRENT_CHANNEL","Channels","channels","setChannels","setChannelName","channelDescription","setChannelDescription","channelRef","dispatch","useDispatch","loadedChannels","isFormValid","saveCurrentChannel","actionTypes","payload","setCurrentChannel","paddingBottom","Item","opacity","active","onOpen","Form","Field","preventDefault","newChannel","description","createdBy","update","addChannel","UserPanel","userData","setuserData","handleSignout","auth","signOut","Grid","background","Column","Row","padding","margin","Dropdown","trigger","spaced","options","text","SidePanel","fixed","fontSize","App","columns","marginLeft","Login","email","setEmail","password","setPassword","handleSubmit","a","signInWithEmailAndPassword","isFormEmpty","concat","textAlign","verticalAlign","maxWidth","stacked","iconPosition","index","showErrors","to","Register","username","setUsername","confirmPassword","setConfirmPassword","createUserWithEmailAndPassword","createdUser","updateProfile","md5","saveUser","isPasswordValid","Spinner","Dimmer","Loader","AppRouter","history","useHistory","onAuthStateChanged","setUser","exact","path","component","instialState","instialChannelState","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.4c1e09c0.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport { Button, Divider, Menu, Sidebar } from \"semantic-ui-react\";\n\nconst ColorPanel = () => {\n  return (\n    <Sidebar\n      as={Menu}\n      icon=\"labeled\"\n      inverted\n      vertical\n      visible\n      width=\"very thin\"\n    >\n      <Divider />\n      <Button icon=\"add\" size=\"small\" color=\"yellow\" />\n    </Sidebar>\n  );\n};\n\nexport default ColorPanel;\n","// Import the functions you need from the SDKs you need\nimport firebase from \"firebase/compat/app\";\nimport \"firebase/compat/auth\";\nimport \"firebase/compat/database\";\nimport \"firebase/compat/storage\";\n\nconst {\n  REACT_APP_APIKEY,\n  REACT_APP_AUTH_DOMAIN,\n  REACT_APP_PROJECT_ID,\n  REACT_APP_STORAGE_BUCKATE,\n  REACT_APP_MESSAGING_SENDER_ID,\n  REACT_APP_APP_ID,\n  REACT_APP_REALTIME_DB,\n} = process.env;\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: REACT_APP_APIKEY,\n  authDomain: REACT_APP_AUTH_DOMAIN,\n  projectId: REACT_APP_PROJECT_ID,\n  storageBucket: REACT_APP_STORAGE_BUCKATE,\n  messagingSenderId: REACT_APP_MESSAGING_SENDER_ID,\n  appId: REACT_APP_APP_ID,\n  databaseURL: REACT_APP_REALTIME_DB,\n};\n\nconsole.log(\"Firebase Config: \", firebaseConfig);\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nconst database = firebase.database();\nexport { database };\nexport default firebase;\n","import React, { useState } from \"react\";\nimport { Button, Input, Modal } from \"semantic-ui-react\";\nimport mime from \"mime-types\";\nconst FileModal = (props: any) => {\n  const { open, closeModal, uploadFile } = props;\n\n  const [file, setFile] = useState<any>();\n  const [authorized, setAuthorized] = useState([\"image/jpeg\", \"image/png\"]);\n\n  const addFile = (event: any) => {\n    const file = event?.target.files[0];\n    if (file) {\n      setFile(file);\n    }\n  };\n\n  const sendFile = () => {\n    if (file !== null) {\n      if (isAuthorized(file.name)) {\n        const metadata = { contentType: mime.lookup(file.name) };\n        uploadFile(file, metadata);\n        closeModal();\n        clearFile();\n      }\n    }\n  };\n\n  const clearFile = () => setFile(null);\n\n  const isAuthorized = (filename: any) => {\n    const name: string = mime.lookup(filename) as string;\n    return authorized.includes(name);\n  };\n\n  return (\n    <Modal open={open} onClose={closeModal}>\n      <Modal.Header>Select Image</Modal.Header>\n      <Modal.Content>\n        <Input\n          fluid\n          onChange={addFile}\n          label=\"File Type: jpg, png\"\n          name=\"file\"\n          type=\"file\"\n        />\n      </Modal.Content>\n      <Modal.Actions>\n        <Button color=\"black\" onClick={closeModal}>\n          Cancel\n        </Button>\n        <Button\n          content=\"Upload Image\"\n          labelPosition=\"right\"\n          icon=\"checkmark\"\n          onClick={sendFile}\n          positive\n        />\n      </Modal.Actions>\n    </Modal>\n  );\n};\n\nexport default FileModal;\n","import React from \"react\";\nimport { Progress } from \"semantic-ui-react\";\n\nconst ProgressBar = (props: any) => {\n  const { percentUploaded, className } = props;\n  return (\n    <Progress\n      className={className}\n      percent={percentUploaded}\n      indicating\n      progress\n      success\n    />\n  );\n};\n\nexport default ProgressBar;\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Button, Input, Segment } from \"semantic-ui-react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport firebase from \"../../firebase\";\nimport FileModal from \"./FileModal\";\nimport ProgressBar from \"./ProgressBar\";\nconst MessageForm = (props: any) => {\n  const { messageRef }: { messageRef: any } = props;\n  const [message, setMessage] = useState(\"\");\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [errors, setErrors] = useState<any[]>([]);\n  const [uploadstate, setUploadstate] = useState(\"\");\n  const [uploadTask, setUploadTask] = useState<any>(null);\n  const [storageRef, setStorageRef] = useState(firebase.storage().ref());\n  const [percentage, setPercentage] = useState(0);\n  const user = useSelector((state: any) => state.user);\n  const { currentUser } = user;\n  const channel = useSelector((state: any) => state.channel);\n  const { currentChannel } = channel;\n  const sendMessage = () => {\n    if (message) {\n      setLoading(true);\n      messageRef\n        .child(currentChannel.id)\n        .push()\n        .set(formattedMessage())\n        .then(() => {\n          setLoading(false);\n          setMessage(\"\");\n        })\n        .catch((error: any) => {\n          console.log(error);\n          setLoading(false);\n          setErrors([...errors, error]);\n        });\n    } else {\n      setErrors([...errors, { message: \"Type Message\" }]);\n    }\n  };\n\n  const formattedMessage = (fileUrl?: string) => {\n    const messageData: any = {\n      timestamp: firebase.database.ServerValue.TIMESTAMP,\n      user: {\n        id: currentUser.uid,\n        name: currentUser.displayName,\n        avatar: currentUser.photoURL,\n      },\n    };\n\n    if (!fileUrl) {\n      messageData[\"content\"] = message;\n    } else {\n      messageData[\"image\"] = fileUrl;\n    }\n\n    return messageData;\n  };\n\n  const uploadFile = (file: any, metadata: any) => {\n    const pathToUpload = currentChannel.id;\n    const filePath = `chat/public/${uuidv4()}.jpg`;\n    setUploadstate(\"uploading\");\n    setUploadTask(storageRef.child(filePath).put(file, metadata));\n  };\n\n  useEffect(() => {\n    if (!uploadTask) return;\n    uploadTask.on(\n      \"state_changed\",\n      (snap: any) => {\n        const percentUploaded = Math.round(\n          (snap.bytesTransferred / snap.totalBytes) * 100\n        );\n        setPercentage(percentUploaded);\n      },\n      (error: any) => {\n        setErrors([...errors, error]);\n        setUploadstate(\"error\");\n        setUploadTask(null);\n      },\n      () => {\n        uploadTask.snapshot.ref\n          .getDownloadURL()\n          .then((downloadurl: string) => {\n            sendFileMessage(downloadurl);\n          })\n          .catch((error: any) => {\n            setErrors([...errors, error]);\n            setUploadstate(\"error\");\n            setUploadTask(null);\n          });\n      }\n    );\n    return () => {\n      uploadTask.off();\n    };\n  }, [uploadTask]);\n\n  const sendFileMessage = (downloadUrl: string) => {\n    messageRef\n      .child(currentChannel.id)\n      .push()\n      .set(formattedMessage(downloadUrl))\n      .then(() => {\n        setUploadstate(\"done\");\n      })\n      .catch((error: any) => {\n        setErrors([...errors, error]);\n      });\n  };\n\n  return (\n    <Segment className=\"message-form\">\n      <Button\n        floated=\"left\"\n        icon=\"cloud upload\"\n        onClick={() => setOpen(true)}\n      />\n      <Input\n        fluid\n        floated=\"right\"\n        name=\"message\"\n        style={{ marginBottom: \"0.7em\" }}\n        label={\n          <Button\n            icon=\"send\"\n            disabled={loading}\n            loading={loading}\n            onClick={sendMessage}\n          />\n        }\n        labelPosition=\"right\"\n        value={message}\n        className={\n          errors.some((err) => err.message.includes(\"message\")) ? \"error\" : \"\"\n        }\n        onChange={(e) => setMessage(e.target.value)}\n        placeholder=\"type your message\"\n      />\n      <FileModal\n        open={open}\n        closeModal={() => setOpen(false)}\n        uploadFile={uploadFile}\n      />\n      {uploadstate === \"uploading\" && (\n        <ProgressBar className=\"progress_bar\" percentUploaded={percentage} />\n      )}\n    </Segment>\n  );\n};\n\nexport default MessageForm;\n","import React from \"react\";\nimport { Header, Icon, Input, Segment } from \"semantic-ui-react\";\n\nconst MessagesHeader = (props: any) => {\n  const { channelName, users } = props;\n  return (\n    <Segment clearing>\n      <Header fluid=\"true\" as=\"h2\" floated=\"left\" style={{ marginBottom: 0 }}>\n        <span>\n          {channelName}\n          <Icon name=\"star outline\" color=\"black\" />\n        </span>\n        <Header.Subheader>{users} Users</Header.Subheader>\n      </Header>\n      <Header floated=\"right\">\n        <Input\n          size=\"mini\"\n          icon=\"search\"\n          name=\"searchTerm\"\n          placeholder=\"Search Messages\"\n        />\n      </Header>\n    </Segment>\n  );\n};\n\nexport default MessagesHeader;\n","import React from \"react\";\nimport moment from \"moment\";\nimport { Comment, Image } from \"semantic-ui-react\";\n\nconst Message = (props: any) => {\n  const { key, message, user }: { key: string; message: any; user: any } =\n    props;\n\n  const isOwner = (message: any, user: any): string => {\n    return message.user.id === user.uid ? \"message_self\" : \"\";\n  };\n\n  const timeFromNow = (timeStamp: string) => moment(timeStamp).fromNow();\n\n  const isImage = (message: any) => {\n    return (\n      message.hasOwnProperty(\"image\") && !message.hasOwnProperty(\"content\")\n    );\n  };\n\n  return (\n    <Comment>\n      <Comment.Avatar src={message.user.avatar} />\n      <Comment.Content className={isOwner(message, user)}>\n        <Comment.Author as=\"a\">{message.user.name}</Comment.Author>\n        <Comment.Metadata>{timeFromNow(message.timestamp)}</Comment.Metadata>\n        {isImage(message) ? (\n          <Image src={message.image} className=\"message_image\" />\n        ) : (\n          <Comment.Text>{message.content}</Comment.Text>\n        )}\n      </Comment.Content>\n    </Comment>\n  );\n};\n\nexport default Message;\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { Segment, Comment } from \"semantic-ui-react\";\nimport MessageForm from \"./MessageForm\";\nimport MessagesHeader from \"./MessagesHeader\";\nimport firebase from \"../../firebase\";\nimport { useSelector } from \"react-redux\";\nimport Message from \"./Message\";\nconst Messages = () => {\n  const [messageRef, setMessageRef] = useState(\n    firebase.database().ref(\"messages\")\n  );\n  const [messages, setMessages] = useState<firebase.database.DataSnapshot[]>(\n    []\n  );\n  const [uniqueUser, setUniqueUser] = useState(0);\n  const user = useSelector((state: any) => state.user);\n  const { currentUser } = user;\n  const channel = useSelector((state: any) => state.channel);\n  const { currentChannel } = channel;\n\n  useEffect(() => {\n    if (!currentChannel) return;\n    addListener(currentChannel?.id);\n    // return () => {\n    //   cleanup;\n    // };\n  }, [currentChannel]);\n\n  const addListener = (channelId: string) => {\n    const loadedMessages: firebase.database.DataSnapshot[] = [];\n    messageRef.child(channelId).on(\"child_added\", (snap) => {\n      loadedMessages.push(snap.val());\n      setMessages(loadedMessages);\n    });\n\n    countUniqueUser(loadedMessages);\n  };\n\n  const countUniqueUser = (messages: any[]) => {\n    const uniqueUsers = messages.reduce((acc, message) => {\n      if (!acc.includes(message.user.name)) {\n        acc.push(message.user.name);\n      }\n      return acc;\n    }, []);\n    setUniqueUser(uniqueUsers.length);\n  };\n\n  const displayMessages = (messages: firebase.database.DataSnapshot[]) => {\n    return messages.map((message: any) => {\n      return (\n        <Message key={message.timestamp} message={message} user={currentUser} />\n      );\n    });\n  };\n\n  return (\n    <div className=\"message-box\">\n      <MessagesHeader channelName={currentChannel?.name} users={uniqueUser} />\n      <Segment>\n        <Comment.Group className=\"comment-box\">\n          {displayMessages(messages)}\n        </Comment.Group>\n      </Segment>\n      <MessageForm messageRef={messageRef} />\n    </div>\n  );\n};\n\nexport default Messages;\n","import React from \"react\";\n\nconst MetaPanel = () => {\n  return <div>MetaPanel</div>;\n};\n\nexport default MetaPanel;\n","export const SET_USER = \"SET_USER\";\nexport const CLEAR_USER = \"CLEAR_USER\";\nexport const SET_CURRENT_CHANNEL = \"SET_CURRENT_CHANNEL\";\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button, Form, Icon, Input, Menu, Modal } from \"semantic-ui-react\";\nimport firebase from \"../../firebase\";\nimport { setCurrentChannel } from \"../../redux/actions/action\";\nconst Channels = () => {\n  const [channels, setChannels] = useState<firebase.database.DataSnapshot[]>(\n    []\n  );\n  const [open, setOpen] = useState(false);\n  const [channelName, setChannelName] = useState(\"\");\n  const [channelDescription, setChannelDescription] = useState<string>(\"\");\n  const [channelRef, setChannelRef] = useState<firebase.database.Reference>(\n    firebase.database().ref(\"channels\")\n  );\n  const dispatch = useDispatch();\n  const user = useSelector((state: any) => state.user);\n  const channel = useSelector((state: any) => state.channel);\n  const { currentUser } = user;\n  const { currentChannel } = channel;\n\n  useEffect(() => {\n    addListener();\n    return () => {\n      channelRef.off();\n    };\n  }, []);\n\n  const addListener = () => {\n    let loadedChannels: firebase.database.DataSnapshot[] = [];\n    channelRef.on(\"child_added\", (snap) => {\n      loadedChannels.push(snap.val());\n      setChannels(loadedChannels);\n    });\n  };\n\n  const addChannel = () => {\n    const key = channelRef.push().key;\n\n    const newChannel = {\n      id: key,\n      name: channelName,\n      description: channelDescription,\n      createdBy: {\n        name: currentUser.displayName,\n        avatar: currentUser.photoURL,\n      },\n    };\n\n    channelRef\n      .child(key as string)\n      .update(newChannel)\n      .then(() => {\n        setChannelName(\"\");\n        setChannelDescription(\"\");\n        setOpen(false);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n    if (isFormValid(channelName, channelDescription)) {\n      addChannel();\n    }\n  };\n\n  const isFormValid = (channelName: string, channelDescription: string): any =>\n    channelName && channelDescription;\n\n  const handleChannelName = (e: any) => {\n    setChannelName(e.target.value);\n  };\n\n  const handleChannelDesc = (e: any) => {\n    setChannelDescription(e.target.value);\n  };\n\n  const saveCurrentChannel = (channel: any) => {\n    dispatch(setCurrentChannel(channel));\n  };\n\n  const displayChannels = () => {\n    return channels.map((channel: any) => (\n      <Menu.Item\n        key={channel.key}\n        onClick={() => saveCurrentChannel(channel)}\n        name={channel.name}\n        style={{ opacity: 0.7 }}\n        active={channel?.id === currentChannel?.id}\n      >\n        # {channel.name}\n      </Menu.Item>\n    ));\n  };\n\n  return (\n    <div>\n      <Menu.Menu style={{ paddingBottom: \"2em\" }}>\n        <Menu.Item>\n          <span>\n            <Icon name=\"exchange\" /> Channels\n          </span>{\" \"}\n          ( {channels.length} ){\" \"}\n          <Icon name=\"add\" onClick={() => setOpen(true)} />\n        </Menu.Item>\n        {displayChannels()}\n      </Menu.Menu>\n\n      <Modal\n        open={open}\n        onClose={() => setOpen(false)}\n        onOpen={() => setOpen(true)}\n      >\n        <Modal.Header>Create New Channel</Modal.Header>\n        <Modal.Content>\n          <Form>\n            <Form.Field>\n              <label>Channel Name</label>\n              <Input\n                fluid\n                placeholder=\"Knowledge Base\"\n                name=\"channelName\"\n                onChange={handleChannelName}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Channel Description</label>\n              <Input\n                fluid\n                placeholder=\"In this channel you share the important blogs, videos and other resources\"\n                name=\"channelDescription\"\n                onChange={handleChannelDesc}\n              />\n            </Form.Field>\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button color=\"black\" onClick={() => setOpen(false)}>\n            Cancel\n          </Button>\n          <Button\n            content=\"Add Channel\"\n            labelPosition=\"right\"\n            icon=\"checkmark\"\n            onClick={handleSubmit}\n            positive\n          />\n        </Modal.Actions>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Channels;\n","import * as actionTypes from \"../constants/actionTypes\";\n\nexport const setUser = (user: any) => ({\n  type: actionTypes.SET_USER,\n  payload: {\n    currentUser: user,\n  },\n});\n\nexport const clearUser = () => ({\n  type: actionTypes.CLEAR_USER,\n});\n\nexport const setCurrentChannel = (channel: any) => {\n  return {\n    type: actionTypes.SET_CURRENT_CHANNEL,\n    payload: {\n      currentChannel: channel,\n    },\n  };\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Dropdown, Grid, Header, Icon, Image } from \"semantic-ui-react\";\nimport firebase from \"../../firebase\";\n\nconst UserPanel = () => {\n  const [userData, setuserData] = useState<any>();\n  const user = useSelector((state: any) => state.user);\n  const { currentUser } = user;\n\n  const dropdownOptions = () => [\n    {\n      key: \"user\",\n      text: (\n        <span>\n          Signed in as <strong>{userData && userData.displayName}</strong>\n        </span>\n      ),\n      disabled: true,\n    },\n    {\n      key: \"avatar\",\n      text: <span>Change Avatar</span>,\n    },\n    {\n      key: \"signout\",\n      text: <span onClick={handleSignout}>Sign Out</span>,\n    },\n  ];\n\n  const handleSignout = () => {\n    firebase\n      .auth()\n      .signOut()\n      .then(() => console.log(\"User Signed Out\"));\n  };\n\n  useEffect(() => {\n    setuserData(currentUser);\n  }, [currentUser]);\n\n  return (\n    <div>\n      <Grid style={{ background: \"#000\" }}>\n        <Grid.Column>\n          <Grid.Row style={{ padding: \"1.2rem\", margin: \"0\" }}>\n            <Header inverted floated=\"left\" as=\"h2\">\n              <Icon name=\"slack\" />\n              <Header.Content>SlackClone</Header.Content>\n            </Header>\n          </Grid.Row>\n        </Grid.Column>\n      </Grid>\n      <Grid>\n        <Grid.Column>\n          <Grid.Row style={{ padding: \"0 1.2rem\", margin: \"0\" }}>\n            <Header style={{ padding: \"0.25em\" }} as=\"h4\" inverted>\n              <Dropdown\n                trigger={\n                  <span>\n                    <Image\n                      src={userData && userData.photoURL}\n                      spaced=\"right\"\n                      avatar\n                    />\n                    {userData && userData.displayName}\n                  </span>\n                }\n                options={dropdownOptions()}\n              />\n            </Header>\n          </Grid.Row>\n        </Grid.Column>\n      </Grid>\n    </div>\n  );\n};\n\nexport default UserPanel;\n","import React from \"react\";\nimport { Menu } from \"semantic-ui-react\";\nimport Channels from \"./Channels\";\nimport UserPanel from \"./UserPanel\";\n\nconst SidePanel = () => {\n  return (\n    <Menu\n      size=\"large\"\n      inverted\n      fixed=\"left\"\n      vertical\n      style={{ background: \"#016DBF\", fontSize: \"1.2rem\" }}\n    >\n      <UserPanel />\n      <Channels />\n    </Menu>\n  );\n};\n\nexport default SidePanel;\n","import React from \"react\";\nimport { Grid } from \"semantic-ui-react\";\n\nimport \"./App.css\";\nimport ColorPanel from \"./ColorPanel/ColorPanel\";\nimport Messages from \"./Messages/Messages\";\nimport MetaPanel from \"./MetaPanel/MetaPanel\";\nimport SidePanel from \"./SidePanel/SidePanel\";\n\nconst App = () => {\n  return (\n    <Grid columns=\"equal\" className=\"app\" style={{ background: \"#eee\" }}>\n      <ColorPanel />\n      <SidePanel />\n      <Grid.Column style={{ marginLeft: 320 }}>\n        <Messages />\n      </Grid.Column>\n      <Grid.Column width={4}>\n        <MetaPanel />\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default App;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Grid,\n  Form,\n  Segment,\n  Button,\n  Header,\n  Message,\n  Icon,\n} from \"semantic-ui-react\";\nimport md5 from \"md5\";\n\nimport firebase, { database } from \"../../firebase\";\n\nconst Login = () => {\n  const [email, setEmail] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n  const [errors, setErrors] = useState<any[]>([]);\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async (event: any) => {\n    try {\n      if (!isFormValid()) {\n        return;\n      }\n      event.preventDefault();\n      setErrors([]);\n      setLoading(true);\n      const signedUser = await firebase\n        .auth()\n        .signInWithEmailAndPassword(email, password);\n\n      setLoading(false);\n    } catch (error: any) {\n      console.log(\"Error:\", error.message);\n      setErrors([{ message: \"Email or Password Incorrect\" }]);\n      setLoading(false);\n    }\n  };\n\n  const isFormValid = () => {\n    let errors: any[] = [];\n    let error;\n\n    if (isFormEmpty()) {\n      error = { message: \"Fill In All Fields\" };\n      setErrors(errors.concat(error));\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const isFormEmpty = () => {\n    return !email.length || !password.length;\n  };\n\n  const showErrors = (errors: any) =>\n    errors.map((error: any, index: number) => (\n      <p key={index}>{error.message}</p>\n    ));\n\n  return (\n    <Grid textAlign=\"center\" verticalAlign=\"middle\" className=\"app\">\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as=\"h1\" icon color=\"purple\" textAlign=\"center\">\n          <Icon name=\"slack\" color=\"purple\" />\n          Login On Slack-Clone\n        </Header>\n        <Form size=\"large\">\n          <Segment stacked>\n            <Form.Input\n              fluid\n              name=\"email\"\n              icon=\"mail\"\n              iconPosition=\"left\"\n              placeholder=\"Email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              type=\"email\"\n            />\n\n            <Form.Input\n              fluid\n              name=\"password\"\n              icon=\"lock\"\n              iconPosition=\"left\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              type=\"password\"\n            />\n\n            <Button\n              className={loading ? \"loading\" : \"\"}\n              disabled={loading}\n              color=\"green\"\n              fluid\n              size=\"large\"\n              onClick={handleSubmit}\n            >\n              Login\n            </Button>\n          </Segment>\n        </Form>\n\n        {errors.length > 0 && (\n          <Message error>\n            <h3>Error</h3>\n            {showErrors(errors)}\n          </Message>\n        )}\n\n        <Message>\n          Already have an account? <Link to=\"/register\"> Register</Link>\n        </Message>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Grid,\n  Form,\n  Segment,\n  Button,\n  Header,\n  Message,\n  Icon,\n} from \"semantic-ui-react\";\nimport md5 from \"md5\";\n\nimport firebase, { database } from \"../../firebase\";\n\nconst Register = () => {\n  const [username, setUsername] = useState<string>(\"\");\n  const [email, setEmail] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n  const [confirmPassword, setConfirmPassword] = useState<string>(\"\");\n  const [errors, setErrors] = useState<any[]>([]);\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async (event: any) => {\n    try {\n      if (!isFormValid()) {\n        return;\n      }\n      event.preventDefault();\n      setErrors([]);\n      setLoading(true);\n      const createdUser = await firebase\n        .auth()\n        .createUserWithEmailAndPassword(email, password);\n\n      console.log(createdUser);\n\n      const updatedUser = await createdUser.user?.updateProfile({\n        displayName: username,\n        photoURL: `https://www.gravatar.com/avatar/${md5(\n          createdUser.user.email as string\n        )}?d=identicon`,\n      });\n\n      const savedUser = await saveUser(createdUser);\n      console.log(\"User Saved\");\n      setLoading(false);\n    } catch (error: any) {\n      setErrors(errors.concat(error.message));\n      setLoading(false);\n    }\n  };\n\n  const saveUser = (createdUser: firebase.auth.UserCredential) => {\n    if (createdUser.user)\n      return database.ref(\"users\").child(createdUser.user.uid).set({\n        name: createdUser.user.displayName,\n        avatar: createdUser.user.photoURL,\n        email: createdUser.user.email,\n      });\n  };\n\n  const isFormValid = () => {\n    let errors: any[] = [];\n    let error;\n\n    if (isFormEmpty()) {\n      error = { message: \"Fill In All Fields\" };\n      setErrors(errors.concat(error));\n      return false;\n    } else if (!isPasswordValid()) {\n      error = { message: \"Password is Invalid\" };\n      setErrors(errors.concat(error));\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const isFormEmpty = () => {\n    return (\n      !username.length ||\n      !email.length ||\n      !password.length ||\n      !confirmPassword.length\n    );\n  };\n\n  const isPasswordValid = () => {\n    if (password.length < 6) {\n      return false;\n    } else if (password !== confirmPassword) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const showErrors = (errors: any) =>\n    errors.map((error: any, index: number) => (\n      <p key={index}>{error.message}</p>\n    ));\n\n  return (\n    <Grid textAlign=\"center\" verticalAlign=\"middle\" className=\"app\">\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as=\"h1\" icon color=\"green\" textAlign=\"center\">\n          <Icon name=\"connectdevelop\" color=\"green\" />\n          Register On Slack-Clone\n        </Header>\n        <Form size=\"large\">\n          <Segment stacked>\n            <Form.Input\n              fluid\n              name=\"username\"\n              icon=\"user\"\n              iconPosition=\"left\"\n              placeholder=\"Username\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n              type=\"text\"\n            />\n\n            <Form.Input\n              fluid\n              name=\"email\"\n              icon=\"mail\"\n              iconPosition=\"left\"\n              placeholder=\"Email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              type=\"email\"\n            />\n\n            <Form.Input\n              fluid\n              name=\"password\"\n              icon=\"lock\"\n              iconPosition=\"left\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              type=\"password\"\n            />\n\n            <Form.Input\n              fluid\n              name=\"confirmPassword\"\n              icon=\"repeat\"\n              iconPosition=\"left\"\n              placeholder=\"Confirm Password\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n              type=\"password\"\n            />\n\n            <Button\n              className={loading ? \"loading\" : \"\"}\n              disabled={loading}\n              color=\"blue\"\n              fluid\n              size=\"large\"\n              onClick={handleSubmit}\n            >\n              Register\n            </Button>\n          </Segment>\n        </Form>\n\n        {errors.length > 0 && (\n          <Message error>\n            <h3>Error</h3>\n            {showErrors(errors)}\n          </Message>\n        )}\n\n        <Message>\n          Already a User? <Link to=\"/login\">Login</Link>\n        </Message>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default Register;\n","import React from \"react\";\nimport { Loader, Dimmer } from \"semantic-ui-react\";\n\nconst Spinner = () => {\n  return (\n    <Dimmer active>\n      <Loader size=\"huge\" content={\"Slack-clone is loading\"} />\n    </Dimmer>\n  );\n};\n\nexport default Spinner;\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  useHistory,\n} from \"react-router-dom\";\nimport App from \"../components/App\";\nimport Login from \"../components/Auth/Login\";\nimport Register from \"../components/Auth/Register\";\nimport Spinner from \"../components/Spinner\";\nimport firebase from \"../firebase\";\nimport { clearUser, setUser } from \"../redux/actions/action\";\n\nfunction AppRouter() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const user = useSelector((state: any) => state.user);\n  const { loading } = user;\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        dispatch(setUser(user));\n        history.push(\"/\");\n      } else {\n        dispatch(clearUser());\n        history.push(\"/login\");\n      }\n    });\n  }, []);\n\n  return loading ? (\n    <Spinner />\n  ) : (\n    <Switch>\n      <Route exact path=\"/\" component={App} />\n      <Route path=\"/login\" component={Login} />\n      <Route path=\"/register\" component={Register} />\n    </Switch>\n  );\n}\n\nexport default AppRouter;\n","import * as actionTypes from \"../constants/actionTypes\";\n\nexport interface UserState {\n  currentUser: any;\n  loading: boolean;\n  error: boolean;\n}\n\nconst instialState = {\n  currentUser: null,\n  loading: true,\n  error: false,\n};\n\nexport const UserReducer = (state: UserState = instialState, action: any) => {\n  switch (action.type) {\n    case actionTypes.SET_USER:\n      return {\n        ...state,\n        currentUser: action.payload.currentUser,\n        loading: false,\n      };\n    case actionTypes.CLEAR_USER:\n      return {\n        ...state,\n        currentUser: null,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n};\n\nconst instialChannelState = {\n  currentChannel: null,\n};\n\nexport const ChannelReducer = (state = instialChannelState, action: any) => {\n  switch (action.type) {\n    case actionTypes.SET_CURRENT_CHANNEL:\n      return {\n        ...state,\n        currentChannel: action.payload.currentChannel,\n      };\n    default:\n      return state;\n  }\n};\n","import { createStore, combineReducers } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport { ChannelReducer, UserReducer } from \"./reducers/reducer\";\n\nconst rootReducer = combineReducers({\n  user: UserReducer,\n  channel: ChannelReducer,\n});\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nexport { store };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport \"semantic-ui-css/semantic.min.css\";\nimport AppRouter from \"./router/router\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router basename={process.env.PUBLIC_URL}>\n        <AppRouter />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}